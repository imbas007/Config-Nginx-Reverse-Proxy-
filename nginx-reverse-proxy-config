server {
        listen 80 default_server;
        listen [::]:80 default_server;

        root /var/www/html;

        index index.php index.html index.htm index.nginx-debian.html;

        server_name <your domain>;

        location / {
                try_files $uri $uri/ @c2;
        }

	location /analytics.gif {
	        return 200 ".";
	}
        
        location @c2 {
                proxy_pass http://<your ip redirector>;
                proxy_redirect off;
                proxy_set_header Host $host;
                proxy_set_header X-Beacon-Id $http_x_beacon_id;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header "User-Agent" "${http_user_agent}";            
        }
}

server {
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;

        ssl_certificate /etc/letsencrypt/live/<your domain>/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/<your domain>/privkey.pem; # managed by Certbot
        ssl_session_cache shared:le_nginx_SSL:1m; # managed by Certbot
        ssl_session_timeout 1440m; # managed by Certbot

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # managed by Certbot
        ssl_prefer_server_ciphers on; # managed by Certbot

        ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256 ECDHE-ECDSA-AES256-GCM-SHA384 ECDHE-ECDSA-AES128-SHA ECDHE-ECDSA-AES256-SHA ECDHE-ECDSA-AES128-SHA256 ECDHE-ECDSA-AES256-SHA384 ECDHE-RSA-AES128-GCM-SHA256 ECDHE-RSA-AES256-GCM-SHA384 ECDHE-RSA-AES128-SHA ECDHE-RSA-AES128-SHA256 ECDHE-RSA-AES256-SHA384 DHE-RSA-AES128-GCM-SHA256 DHE-RSA-AES256-GCM-SHA384 DHE-RSA-AES128-SHA DHE-RSA-AES256-SHA DHE-RSA-AES128-SHA256 DHE-RSA-AES256-SHA256 EDH-RSA-DES-CBC3-SHA"; # managed by Certbot

        root /var/www/html;

        index index.php index.html index.htm index.nginx-debian.html;

        server_name <your domain>;

        location / {
                try_files $uri $uri/ @c2;
        }

	location /analytics.gif {
                return 200 ".";
	}

        location @c2 {
                proxy_pass https://<your ip redirector>;
                proxy_redirect off;
                proxy_set_header Host $host;
                proxy_set_header X-Beacon-Id $http_x_beacon_id;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header "User-Agent" "${http_user_agent}";  
        }
}
